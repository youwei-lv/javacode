import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.List;

public class BaseFormConverter {
	String inputf;
	String outputf;
	String errorlogfile="error.log";
	boolean isdir;
	
	public BaseFormConverter(String inputf, String outputf) {
		this.inputf = inputf;
		this.outputf = outputf;
		if(new File(inputf).isDirectory()){
			this.isdir = true;
			File outputdir = new File(outputf);
			if(outputdir.exists() && outputdir.isFile()) {
				throw new RuntimeException("The output directory cannot be created");
			}
			else if(!outputdir.exists()) {
				outputdir.mkdir();
			}
		}
		else {
			this.isdir = false;
		}
	}
	
	public void baseFormConverting() throws FileNotFoundException {
		PrintWriter err = new PrintWriter(this.errorlogfile);
		if(isdir) {
			File dir = new File(this.inputf);
			File[] directoryListing = dir.listFiles();
			BufferedReader reader = null;
			String line;
			for (File child : directoryListing) {
				try {
					reader = new BufferedReader(new FileReader(child));
					while((line=reader.readLine()) != null) {
						
					}
				} catch (IOException e) {
					e.printStackTrace(err);
				}
			}
		}
		else {
			
		}
	}
	
	static public  List<CoreMap> convert(String text) {
		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		File f = new File();
	}

}
