<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_60) on Tue Sep 08 16:51:28 JST 2015 -->
<title>TokenIdConverter</title>
<meta name="date" content="2015-09-08">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="TokenIdConverter";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":9,"i6":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TokenIdConverter.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../eng/TokenCounter.TokenOutputSelector.html" title="class in eng"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?eng/TokenIdConverter.html" target="_top">Frames</a></li>
<li><a href="TokenIdConverter.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">eng</div>
<h2 title="Class TokenIdConverter" class="title">Class TokenIdConverter</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>eng.TokenIdConverter</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">TokenIdConverter</span>
extends java.lang.Object</pre>
<div class="block">A TokenIdConverter convert the tokens in a single file or the files in a
 directory to their ids which are separated by a delimiter "|" which stand for
 the separators in the original text, e.g. commas, newline characters etc., to
 identify segments in the resulted id sequence; the id of a token is the line
 number whose line begins with the token in the token list file, with the line
 number counted from zero.
 <p>
 
 Because some words in the files can be missing from the token list,
 extracting all separators in a file may result in some empty segments. This
 situation is considered and is handled by automatically removing these empty
 segments.
 <p>
 
 When the input is a single text file, the output will also be a text file. If
 the specified output is an existing directory, then an error will occur;
 however, when the input is a directory consisting of multiple text files, the
 specified output stands for a directory to take in the resulted files. For
 each token file in the input directory, a file with the same filename will be
 created in the output directory to represent the resulted id sequence by
 processing the token file.
 <p>
 
 Compiled TokenIdConverter can be called through command line as a tool to
 convert files of tokens into files of ids according to a token list file. To
 specify these related files, use the following options:
 <ul>
 <li>-input: denotes the input of files (a single file or a directory of
 files)</li>
 <li>-output: denotes the output of files (a single file or a directory of
 files)</li>
 <li>-tokenlist: denotes the filename of the token list file, where each line
 begins with token string, and the id is the line number of the token</li>
 <li>-printword: a switch determining whether the token are shown following
 the converted ids</li>
 <li>-segmentpattern: the regular expression for matching the segments in the
 origin texts, by default set to \\.|,|\\n|:|\\?|!</li>
 </ul>
 An example of specified options: -input=test_output -output=test_output_ids
 -printword=false -tokenlist=token_freq -printword=true</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Youwei Lu</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#separatorPattern">separatorPattern</a></span></code>
<div class="block">A regular expression for matching the separators in files</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.util.Map&lt;java.lang.String,java.lang.Integer&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#tokenIdMap">tokenIdMap</a></span></code>
<div class="block">The map between the token and its id.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#tokenListFile">tokenListFile</a></span></code>
<div class="block">The filename of the token list file</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#TokenIdConverter-java.lang.String-">TokenIdConverter</a></span>(java.lang.String&nbsp;tokenListFile)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#convertTokenDirectory-java.io.File-java.io.File-boolean-">convertTokenDirectory</a></span>(java.io.File&nbsp;inputdir,
                     java.io.File&nbsp;outputdir,
                     boolean&nbsp;printword)</code>&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#convertTokenFile-java.io.File-java.io.File-boolean-">convertTokenFile</a></span>(java.io.File&nbsp;infile,
                java.io.File&nbsp;outfile,
                boolean&nbsp;printword)</code>
<div class="block">Read tokens from an input file, convert the tokens to corresponding ids
 in the token list, and write the results to the output file.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#doconvert-java.io.File-java.io.File-boolean-">doconvert</a></span>(java.io.File&nbsp;input,
         java.io.File&nbsp;output,
         boolean&nbsp;printword)</code>&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#getSeparatorPattern--">getSeparatorPattern</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#loadTokenList--">loadTokenList</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#main-java.lang.String:A-">main</a></span>(java.lang.String[]&nbsp;args)</code>&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenIdConverter.html#setSeparatorPattern-java.lang.String-">setSeparatorPattern</a></span>(java.lang.String&nbsp;separatorPattern)</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="tokenListFile">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tokenListFile</h4>
<pre>private&nbsp;java.lang.String tokenListFile</pre>
<div class="block">The filename of the token list file</div>
</li>
</ul>
<a name="tokenIdMap">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tokenIdMap</h4>
<pre>private&nbsp;java.util.Map&lt;java.lang.String,java.lang.Integer&gt; tokenIdMap</pre>
<div class="block">The map between the token and its id. A token's id is the line number
 whose corresponding line begins with the token</div>
</li>
</ul>
<a name="separatorPattern">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>separatorPattern</h4>
<pre>private&nbsp;java.lang.String separatorPattern</pre>
<div class="block">A regular expression for matching the separators in files</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="TokenIdConverter-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TokenIdConverter</h4>
<pre>public&nbsp;TokenIdConverter(java.lang.String&nbsp;tokenListFile)</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="loadTokenList--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadTokenList</h4>
<pre>public&nbsp;void&nbsp;loadTokenList()
                   throws java.io.IOException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
<a name="convertTokenFile-java.io.File-java.io.File-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>convertTokenFile</h4>
<pre>private&nbsp;void&nbsp;convertTokenFile(java.io.File&nbsp;infile,
                              java.io.File&nbsp;outfile,
                              boolean&nbsp;printword)
                       throws java.io.IOException</pre>
<div class="block">Read tokens from an input file, convert the tokens to corresponding ids
 in the token list, and write the results to the output file. If
 separators are detected, then insert a delimiter "|" in the id sequence
 to denote segments; however, empty segments are avoided.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>infile</code> - a File object representing the input file</dd>
<dd><code>outfile</code> - a File object representing the output file</dd>
<dd><code>printword</code> - an indicator for printing the token or not</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code> - thrown when infile does not exist or the writing to outfile
             fails</dd>
</dl>
</li>
</ul>
<a name="getSeparatorPattern--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSeparatorPattern</h4>
<pre>public&nbsp;java.lang.String&nbsp;getSeparatorPattern()</pre>
</li>
</ul>
<a name="setSeparatorPattern-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSeparatorPattern</h4>
<pre>public&nbsp;void&nbsp;setSeparatorPattern(java.lang.String&nbsp;separatorPattern)</pre>
</li>
</ul>
<a name="convertTokenDirectory-java.io.File-java.io.File-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>convertTokenDirectory</h4>
<pre>private&nbsp;void&nbsp;convertTokenDirectory(java.io.File&nbsp;inputdir,
                                   java.io.File&nbsp;outputdir,
                                   boolean&nbsp;printword)
                            throws java.io.IOException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
<a name="doconvert-java.io.File-java.io.File-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>doconvert</h4>
<pre>public&nbsp;void&nbsp;doconvert(java.io.File&nbsp;input,
                      java.io.File&nbsp;output,
                      boolean&nbsp;printword)
               throws java.io.IOException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
<a name="main-java.lang.String:A-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>main</h4>
<pre>public static&nbsp;void&nbsp;main(java.lang.String[]&nbsp;args)
                 throws java.io.IOException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TokenIdConverter.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../eng/TokenCounter.TokenOutputSelector.html" title="class in eng"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?eng/TokenIdConverter.html" target="_top">Frames</a></li>
<li><a href="TokenIdConverter.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
