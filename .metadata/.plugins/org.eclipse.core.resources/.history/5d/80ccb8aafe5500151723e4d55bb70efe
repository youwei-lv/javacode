<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_60) on Tue Sep 08 16:51:28 JST 2015 -->
<title>TokenCounter</title>
<meta name="date" content="2015-09-08">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="TokenCounter";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":9,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TokenCounter.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../eng/BaseFormConverter.html" title="class in eng"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../eng/TokenCounter.FixedVocabularySizeTokenSelector.html" title="class in eng"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?eng/TokenCounter.html" target="_top">Frames</a></li>
<li><a href="TokenCounter.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">eng</div>
<h2 title="Class TokenCounter" class="title">Class TokenCounter</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>eng.TokenCounter</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">TokenCounter</span>
extends java.lang.Object</pre>
<div class="block">A TokenCounter object counts the appearance times of different tokens in
 files; however, there are two regular expressions for token selection, one
 for collecting tokens and the other for scraping tokens, and only those
 tokens that conform to the <a href="../eng/TokenCounter.html#countPattern">collecting regular
 expression</a> and do not match the <a href="../eng/TokenCounter.html#ignorePattern">scraping one</a> are
 counted.
 
 TokenCounter can be executed from command line with options to specify the
 target files whose tokens are counted, and output the frequency of tokens to
 a file. Use the following options:
 
 <ul>
 <li>-input: input file or directory</li>
 <li>-output: the output file recording the counting results</li>
 <li>-countpattern: the regular expression for tokens to be collected for
 counting</li>
 <li>-ignorepattern: the regular expression for keeping tokens from being
 counted</li>
 <li>-outputfilter: the mode for output token selection. <br>
 Use outputfilter.name to specify the filter to use. At the moment, it can be
 "fixedsize" or "largerthan", and outputfilter.value is used to specify the
 arguments for the specified filter.</li>
 </ul></div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Youwei Lu</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Class and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.FixedVocabularySizeTokenSelector.html" title="class in eng">TokenCounter.FixedVocabularySizeTokenSelector</a></span></code>
<div class="block">A subclass of <a href="../eng/TokenCounter.TokenOutputSelector.html" title="class in eng"><code>TokenCounter.TokenOutputSelector</code></a>, which implements the selection
 of tokens that only a fixed number of tokens are to be output based on
 their frequencies.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.LargerThanTokenSelector.html" title="class in eng">TokenCounter.LargerThanTokenSelector</a></span></code>
<div class="block">A subclass of <a href="../eng/TokenCounter.TokenOutputSelector.html" title="class in eng"><code>TokenCounter.TokenOutputSelector</code></a>, which implements the selection
 of tokens that a token is output as long as its frequency is larger than
 a specific number.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.TokenOutputSelector.html" title="class in eng">TokenCounter.TokenOutputSelector</a></span></code>
<div class="block">An inner abstract class defined for the purpose of allowing its
 subclasses' can implement the logics of determining whether or not a
 token should be written to the output file based on the state of the
 words' frequencies.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#ASC">ASC</a></span></code>
<div class="block">Constant standing for sorting in ascending order.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.util.Map&lt;java.lang.String,java.lang.Integer&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#count">count</a></span></code>
<div class="block">A counting map between tokens and their frequencies</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#countf">countf</a></span></code>
<div class="block">The name of file to which the counting result will be written.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>(package private) java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#countPattern">countPattern</a></span></code>
<div class="block">A regular expression for matched tokens to be counted</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#DESC">DESC</a></span></code>
<div class="block">Constant standing for sorting in descending order.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>(package private) java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#ignorePattern">ignorePattern</a></span></code>
<div class="block">A regular expression for matched tokens to be filtered out from counting</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#inputf">inputf</a></span></code>
<div class="block">Specified counting target, which may be a file name or a directory.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../eng/TokenCounter.TokenOutputSelector.html" title="class in eng">TokenCounter.TokenOutputSelector</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#outputSelector">outputSelector</a></span></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier</th>
<th class="colLast" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#TokenCounter-java.lang.String-java.lang.String-">TokenCounter</a></span>(java.lang.String&nbsp;inputf,
            java.lang.String&nbsp;countf)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private </code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#TokenCounter-java.lang.String-java.lang.String-java.lang.String-java.lang.String-">TokenCounter</a></span>(java.lang.String&nbsp;inputf,
            java.lang.String&nbsp;countf,
            java.lang.String&nbsp;countPattern,
            java.lang.String&nbsp;ignorePattern)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#addToken-java.lang.String-">addToken</a></span>(java.lang.String&nbsp;token)</code>
<div class="block">Increase the frequency of a specific token by one, if the token matches
 the collecting regular expression and does not match the scraping regular
 expression.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#docount--">docount</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#getCountPattern--">getCountPattern</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#getIgnorePattern--">getIgnorePattern</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#main-java.lang.String:A-">main</a></span>(java.lang.String[]&nbsp;args)</code>&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#outputCountMap-java.util.List-">outputCountMap</a></span>(java.util.List&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Integer&gt;&gt;&nbsp;list)</code>&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#outputFilteredCountMap-java.util.List-">outputFilteredCountMap</a></span>(java.util.List&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Integer&gt;&gt;&nbsp;list)</code>&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#outputWholeCountMap-java.util.List-">outputWholeCountMap</a></span>(java.util.List&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Integer&gt;&gt;&nbsp;list)</code>&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#setCountPattern-java.lang.String-">setCountPattern</a></span>(java.lang.String&nbsp;countPattern)</code>&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#setIgnorePattern-java.lang.String-">setIgnorePattern</a></span>(java.lang.String&nbsp;ignorePattern)</code>&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#setOutputTokenSelector-java.lang.String-java.lang.String-">setOutputTokenSelector</a></span>(java.lang.String&nbsp;selectorName,
                      java.lang.String&nbsp;selectorValue)</code>&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>java.util.List&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Integer&gt;&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../eng/TokenCounter.html#sortByFrequency-int-">sortByFrequency</a></span>(int&nbsp;order)</code>
<div class="block">Output a list of token-frequency pairs which are sorted in ascending or
 descending order, based on tokens' frequency.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="inputf">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>inputf</h4>
<pre>java.lang.String inputf</pre>
<div class="block">Specified counting target, which may be a file name or a directory. When
 it is a single file, the tokens in the file will be counted; however,
 when it is a directory, tokens in all files in the directory will be
 counted.</div>
</li>
</ul>
<a name="countf">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countf</h4>
<pre>java.lang.String countf</pre>
<div class="block">The name of file to which the counting result will be written.</div>
</li>
</ul>
<a name="ignorePattern">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ignorePattern</h4>
<pre>java.lang.String ignorePattern</pre>
<div class="block">A regular expression for matched tokens to be filtered out from counting</div>
</li>
</ul>
<a name="countPattern">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countPattern</h4>
<pre>java.lang.String countPattern</pre>
<div class="block">A regular expression for matched tokens to be counted</div>
</li>
</ul>
<a name="count">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>count</h4>
<pre>private&nbsp;java.util.Map&lt;java.lang.String,java.lang.Integer&gt; count</pre>
<div class="block">A counting map between tokens and their frequencies</div>
</li>
</ul>
<a name="ASC">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ASC</h4>
<pre>public static final&nbsp;int ASC</pre>
<div class="block">Constant standing for sorting in ascending order.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#eng.TokenCounter.ASC">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="DESC">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DESC</h4>
<pre>public static final&nbsp;int DESC</pre>
<div class="block">Constant standing for sorting in descending order.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#eng.TokenCounter.DESC">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="outputSelector">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>outputSelector</h4>
<pre>private&nbsp;<a href="../eng/TokenCounter.TokenOutputSelector.html" title="class in eng">TokenCounter.TokenOutputSelector</a> outputSelector</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="TokenCounter-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TokenCounter</h4>
<pre>public&nbsp;TokenCounter(java.lang.String&nbsp;inputf,
                    java.lang.String&nbsp;countf)</pre>
</li>
</ul>
<a name="TokenCounter-java.lang.String-java.lang.String-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TokenCounter</h4>
<pre>private&nbsp;TokenCounter(java.lang.String&nbsp;inputf,
                     java.lang.String&nbsp;countf,
                     java.lang.String&nbsp;countPattern,
                     java.lang.String&nbsp;ignorePattern)</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="setOutputTokenSelector-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setOutputTokenSelector</h4>
<pre>public&nbsp;void&nbsp;setOutputTokenSelector(java.lang.String&nbsp;selectorName,
                                   java.lang.String&nbsp;selectorValue)</pre>
</li>
</ul>
<a name="addToken-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addToken</h4>
<pre>public&nbsp;void&nbsp;addToken(java.lang.String&nbsp;token)</pre>
<div class="block">Increase the frequency of a specific token by one, if the token matches
 the collecting regular expression and does not match the scraping regular
 expression.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>token</code> - the token to be added; if it is a token that only matches the
            collecting pattern, then its frequency will be increased by
            one.</dd>
</dl>
</li>
</ul>
<a name="sortByFrequency-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sortByFrequency</h4>
<pre>public&nbsp;java.util.List&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Integer&gt;&gt;&nbsp;sortByFrequency(int&nbsp;order)</pre>
<div class="block">Output a list of token-frequency pairs which are sorted in ascending or
 descending order, based on tokens' frequency.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>order</code> - Mode of sorting, which is either <a href="../eng/TokenCounter.html#ASC"><code>ASC</code></a> or <a href="../eng/TokenCounter.html#DESC"><code>DESC</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A sorted list of token-frequency pairs.</dd>
</dl>
</li>
</ul>
<a name="docount--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>docount</h4>
<pre>public&nbsp;void&nbsp;docount()</pre>
</li>
</ul>
<a name="outputCountMap-java.util.List-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>outputCountMap</h4>
<pre>public&nbsp;void&nbsp;outputCountMap(java.util.List&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Integer&gt;&gt;&nbsp;list)
                    throws java.io.IOException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
<a name="outputWholeCountMap-java.util.List-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>outputWholeCountMap</h4>
<pre>public&nbsp;void&nbsp;outputWholeCountMap(java.util.List&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Integer&gt;&gt;&nbsp;list)
                         throws java.io.IOException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
<a name="outputFilteredCountMap-java.util.List-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>outputFilteredCountMap</h4>
<pre>public&nbsp;void&nbsp;outputFilteredCountMap(java.util.List&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Integer&gt;&gt;&nbsp;list)
                            throws java.io.IOException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
<a name="getIgnorePattern--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getIgnorePattern</h4>
<pre>public&nbsp;java.lang.String&nbsp;getIgnorePattern()</pre>
</li>
</ul>
<a name="setIgnorePattern-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setIgnorePattern</h4>
<pre>public&nbsp;void&nbsp;setIgnorePattern(java.lang.String&nbsp;ignorePattern)</pre>
</li>
</ul>
<a name="getCountPattern--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCountPattern</h4>
<pre>public&nbsp;java.lang.String&nbsp;getCountPattern()</pre>
</li>
</ul>
<a name="setCountPattern-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCountPattern</h4>
<pre>public&nbsp;void&nbsp;setCountPattern(java.lang.String&nbsp;countPattern)</pre>
</li>
</ul>
<a name="main-java.lang.String:A-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>main</h4>
<pre>public static&nbsp;void&nbsp;main(java.lang.String[]&nbsp;args)
                 throws java.io.IOException</pre>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TokenCounter.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../eng/BaseFormConverter.html" title="class in eng"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../eng/TokenCounter.FixedVocabularySizeTokenSelector.html" title="class in eng"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?eng/TokenCounter.html" target="_top">Frames</a></li>
<li><a href="TokenCounter.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
